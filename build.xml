<project name="HandleCheck" default="create-exploded-war">
    <property name="gwt.dir" location="${user.home}/Applications/gwt-mac-1.6.4/"/>
    <property name="sdk.dir" location="${user.home}/Applications/appengine-java-sdk/"/>
    <property name="build.dir" location="out/exploded/HandlecheckWeb"/>

    <import file="${sdk.dir}/config/user/ant-macros.xml"/>

    <fileset id="appengine.sdk.jars" dir="${sdk.dir}/lib">
        <include name="user/**/*.jar"/>
    </fileset>
    <fileset id="project.jars" dir="lib">
        <include name="**/*.jar"/>
    </fileset>

    <path id="project.classpath">
        <fileset refid="appengine.sdk.jars"/>
        <fileset refid="project.jars"/>
    </path>

    <path id="gwt.compiler.classpath">
        <fileset dir="${gwt.dir}" includes="gwt-dev*.jar"/>
        <fileset dir="${gwt.dir}">
            <include name="gwt-user.jar"/>
        </fileset>
    </path>


    <target name="clean"
            description="Deletes the build directory.">
        <delete dir="${build.dir}" includeemptydirs="true" failonerror="false"/>
    </target>

    <target name="copyjars"
            description="Copies the App Engine JARs to the WAR.">
        <copy
                todir="${build.dir}/WEB-INF/lib"
                flatten="true">
            <fileset refid="appengine.sdk.jars"/>
            <fileset refid="project.jars"/>
        </copy>
    </target>

    <target name="compile" depends="copyjars"
            description="Compiles Java source and copies other source files to the WAR.">
        <mkdir dir="${build.dir}/WEB-INF/classes"/>
        <copy todir="${build.dir}/WEB-INF/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <javac
                srcdir="src"
                destdir="${build.dir}/WEB-INF/classes"
                classpathref="project.classpath"
                debug="on"/>
    </target>

    <target name="gwt-compile" depends="compile">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
          <classpath>
            <pathelement location="src"/>
            <path refid="gwt.compiler.classpath"/>
          </classpath>
          <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
          <jvmarg value="-Xmx256M"/>
          <jvmarg value="-XstartOnFirstThread"/>
          <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
            <arg value="-war"/>
            <arg value="${build.dir}"/>
          <arg value="com.jaxzin.handlecheck.HandleCheck"/>
        </java>
    </target>

    <target name="copy-resources">
        <mkdir dir="${build.dir}"/>
        <copy todir="${build.dir}">
            <fileset dir="war">
            </fileset>
        </copy>
    </target>

    <target name="datanucleusenhance" depends="compile"
            description="Performs JDO enhancement on compiled data classes.">
        <enhance_war war="${build.dir}"/>
    </target>

    <target name="create-exploded-war" depends="datanucleusenhance,copy-resources,gwt-compile">
    </target>


    <target name="runserver" depends="create-exploded-war"
            description="Starts the development server.">
        <dev_appserver war="${build.dir}">
        </dev_appserver>
    </target>

    <target name="update" depends="create-exploded-war"
            description="Uploads the application to App Engine.">
        <appcfg action="update" war="${build.dir}"/>
    </target>

    <target name="update_indexes" depends="create-exploded-war"
            description="Uploads just the datastore index configuration to App Engine.">
        <appcfg action="update_indexes" war="${build.dir}"/>
    </target>

    <target name="rollback" depends="create-exploded-war"
            description="Rolls back an interrupted application update.">
        <appcfg action="rollback" war="${build.dir}"/>
    </target>

    <target name="request_logs"
            description="Downloads log data from App Engine for the application.">
        <appcfg action="request_logs" war="${build.dir}">
            <options>
                <arg value="--num_days=5"/>
            </options>
            <args>
                <arg value="logs.txt"/>
            </args>
        </appcfg>
    </target>

</project>
